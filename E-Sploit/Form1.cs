namespace E_XPloit
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            scripteditor.Visible = true;
            buttonpanel.Visible = false;
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            scripteditor.Visible = true;
            buttonpanel.Visible = false;
        }

        private void pictureBox2_Click(object sender, EventArgs e)
        {
            scripteditor.Visible = false;
            buttonpanel.Visible = true;
        }

        private void buttonpanel_Paint(object sender, PaintEventArgs e)
        {

        }
        private void button6_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://pastefy.app/YZoglOyJ/raw\", true))()");
        }

        private void button2_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Inject();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute(scripteditor.Text);
        }

        private void button15_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("game.Players.LocalPlayer.Character.Humanoid.JumpPower = " + textBox2.Text + "\r\ngame.Players.LocalPlayer.Character.Humanoid.WalkSpeed = " + textBox1.Text);
        }

        private void button14_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://raw.githubusercontent.com/scripthubekitten/SCRIPTHUBV3/main/SCRIPTHUBV3\", true))()");
        }

        private void button5_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://pastefy.app/wa3v2Vgm/raw\", true))()");
        }

        private void button4_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("local plr = game.Players.LocalPlayer\r\nlocal chr = plr.Character\r\nlocal hrp = chr.HumanoidRootPart\r\nlocal gui = plr.PlayerGui\r\nprint(gui.Name)\r\nlocal fdf = false\r\nlocal speed = 2.5\r\n\r\nlocal screen = Instance.new(\"ScreenGui\")\r\nscreen.Parent = gui\r\nlocal Victim\r\n\r\nlocal frame = Instance.new(\"Frame\")\r\nframe.Parent = screen\r\nframe.Position = UDim2.new(0.843, 0, 0.781, 0)\r\nframe.Size = UDim2.new(0, 183, 0, 179)\r\n\r\nlocal txtbx = Instance.new(\"TextBox\")\r\ntxtbx.Parent = frame\r\ntxtbx.Position = UDim2.new(0, 0, 0.279, 0)\r\ntxtbx.Size = UDim2.new(0, 183, 0, 50)\r\ntxtbx.Text = \"Username Here\"\r\n\r\nlocal txtbx1 = Instance.new(\"TextBox\")\r\ntxtbx1.Parent = frame\r\ntxtbx1.Position = UDim2.new(0, 0, 0.558, 0)\r\ntxtbx1.Size = UDim2.new(0, 183, 0, 50)\r\ntxtbx1.Text = \"speed\"\r\ntxtbx1.Name = \"TextBox1\"\r\n\r\nlocal txtbtn = Instance.new(\"TextButton\")\r\ntxtbtn.Parent = frame\r\ntxtbtn.Position = UDim2.new(0, 0, 0, 0)\r\ntxtbtn.Size = UDim2.new(0, 183, 0, 50)\r\ntxtbtn.Text = \"Toggle Fuck\"\r\n\r\nlocal A=Instance.new'Animation'\r\nA.AnimationId='rbxassetid://148840371'\r\nlocal H = chr:WaitForChild(\"Humanoid\"):LoadAnimation(A)\r\n\r\ntxtbtn.MouseButton1Click:Connect(function()\r\n\tif fdf == true then\r\n\t\tfdf = false\r\n\t\tH:Stop()\r\n\telse\r\n\t\tfdf = true\r\n\t\tVictim = txtbx.Text\r\n\t\tH:Play()\r\n\t\tH:AdjustSpeed(txtbx1.Text)\r\n\t\tgame:GetService'RunService'.Stepped:Connect(function()\r\n\t\t\tif fdf == true then\r\n\t\t\t\thrp.CFrame=CFrame.new(game.Workspace:FindFirstChild(Victim).HumanoidRootPart.Position)\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\nend)");
        }

        private void button3_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://raw.githubusercontent.com/IlikeyocutgHAH12/FEEGGEG/refs/heads/main/%5BFE%5D%20Energize%20Animation%20Gui.txts true))()");
        }

        private void button5_Click_1(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://pastefy.app/wa3v2Vgm/raw\", true))()");
        }

        private void button7_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game: HttpGet(\"https://cdn.wearedevs.net/scripts/Infinite%20Jump.txt\"))()");
        }

        private void button8_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://cdn.wearedevs.net/scripts/Click%20Teleport.txt\"))()");
        }

        private void button12_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt\"))()");
        }

        private void button13_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("game.Players.LocalPlayer.Character.Humanoid.Health = 0");
        }

        private void button10_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("--[[\r\nA distribution of https://wearedevs.net/scripts\r\nCreated August 17, 2021, Last updated August 17, 2021\r\n\r\nDescription: Draws boxes around each player.\r\n\r\nCredits to \"Real Panda\" for their ESP library\r\n\r\nInstruction: Edit the settings as desired below and execute the script.\r\n\r\nSettings: \r\nReplace \"nil\" with \"true\" to enable the setting, or \"false\" to disable the setting. Without the quotes. \r\nIf you do not change \"nil\", the defaults will take place.\r\n]]\r\n_G.WRDESPEnabled = nil --Enables the ESP (Defaults to true)\r\n_G.WRDESPBoxes = nil --Draws boxes around other players (Defaults to true)\r\n_G.WRDESPTeamColors = nil --Distinguish different teams by their team color. If the game sets one. (Defaults to true)\r\n_G.WRDESPTracers = nil --Displays lines leading to other players (Defaults to false)\r\n_G.WRDESPNames = false --Displays the names of the players within the ESP box (Defaults to true)\r\n\r\n--Dont edit below\r\n\r\n--Only ever load the script once\r\nif not _G.WRDESPLoaded then    \r\n    ----[[ First- Load Kiriot ESP Library ]]----\r\n\r\n    --Settings--\r\n    local ESP = {\r\n        Enabled = false,\r\n        Boxes = true,\r\n        BoxShift = CFrame.new(0,-1.5,0),\r\n        BoxSize = Vector3.new(4,6,0),\r\n        Color = Color3.fromRGB(255, 170, 0),\r\n        FaceCamera = false,\r\n        Names = true,\r\n        TeamColor = true,\r\n        Thickness = 2,\r\n        AttachShift = 1,\r\n        TeamMates = true,\r\n        Players = true,\r\n        \r\n        Objects = setmetatable({}, {__mode=\"kv\"}),\r\n        Overrides = {}\r\n    }\r\n\r\n    --Declarations--\r\n    local cam = workspace.CurrentCamera\r\n    local plrs = game:GetService(\"Players\")\r\n    local plr = plrs.LocalPlayer\r\n    local mouse = plr:GetMouse()\r\n\r\n    local V3new = Vector3.new\r\n    local WorldToViewportPoint = cam.WorldToViewportPoint\r\n\r\n    --Functions--\r\n    local function Draw(obj, props)\r\n        local new = Drawing.new(obj)\r\n        \r\n        props = props or {}\r\n        for i,v in pairs(props) do\r\n            new[i] = v\r\n        end\r\n        return new\r\n    end\r\n\r\n    function ESP:GetTeam(p)\r\n        local ov = self.Overrides.GetTeam\r\n        if ov then\r\n            return ov(p)\r\n        end\r\n        \r\n        return p and p.Team\r\n    end\r\n\r\n    function ESP:IsTeamMate(p)\r\n        local ov = self.Overrides.IsTeamMate\r\n        if ov then\r\n            return ov(p)\r\n        end\r\n        \r\n        return self:GetTeam(p) == self:GetTeam(plr)\r\n    end\r\n\r\n    function ESP:GetColor(obj)\r\n        local ov = self.Overrides.GetColor\r\n        if ov then\r\n            return ov(obj)\r\n        end\r\n        local p = self:GetPlrFromChar(obj)\r\n        return p and self.TeamColor and p.Team and p.Team.TeamColor.Color or self.Color\r\n    end\r\n\r\n    function ESP:GetPlrFromChar(char)\r\n        local ov = self.Overrides.GetPlrFromChar\r\n        if ov then\r\n            return ov(char)\r\n        end\r\n        \r\n        return plrs:GetPlayerFromCharacter(char)\r\n    end\r\n\r\n    function ESP:Toggle(bool)\r\n        self.Enabled = bool\r\n        if not bool then\r\n            for i,v in pairs(self.Objects) do\r\n                if v.Type == \"Box\" then --fov circle etc\r\n                    if v.Temporary then\r\n                        v:Remove()\r\n                    else\r\n                        for i,v in pairs(v.Components) do\r\n                            v.Visible = false\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    function ESP:GetBox(obj)\r\n        return self.Objects[obj]\r\n    end\r\n\r\n    function ESP:AddObjectListener(parent, options)\r\n        local function NewListener(c)\r\n            if type(options.Type) == \"string\" and c:IsA(options.Type) or options.Type == nil then\r\n                if type(options.Name) == \"string\" and c.Name == options.Name or options.Name == nil then\r\n                    if not options.Validator or options.Validator(c) then\r\n                        local box = ESP:Add(c, {\r\n                            PrimaryPart = type(options.PrimaryPart) == \"string\" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == \"function\" and options.PrimaryPart(c),\r\n                            Color = type(options.Color) == \"function\" and options.Color(c) or options.Color,\r\n                            ColorDynamic = options.ColorDynamic,\r\n                            Name = type(options.CustomName) == \"function\" and options.CustomName(c) or options.CustomName,\r\n                            IsEnabled = options.IsEnabled,\r\n                            RenderInNil = options.RenderInNil\r\n                        })\r\n                        --TODO: add a better way of passing options\r\n                        if options.OnAdded then\r\n                            coroutine.wrap(options.OnAdded)(box)\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n\r\n        if options.Recursive then\r\n            parent.DescendantAdded:Connect(NewListener)\r\n            for i,v in pairs(parent:GetDescendants()) do\r\n                coroutine.wrap(NewListener)(v)\r\n            end\r\n        else\r\n            parent.ChildAdded:Connect(NewListener)\r\n            for i,v in pairs(parent:GetChildren()) do\r\n                coroutine.wrap(NewListener)(v)\r\n            end\r\n        end\r\n    end\r\n\r\n    local boxBase = {}\r\n    boxBase.__index = boxBase\r\n\r\n    function boxBase:Remove()\r\n        ESP.Objects[self.Object] = nil\r\n        for i,v in pairs(self.Components) do\r\n            v.Visible = false\r\n            v:Remove()\r\n            self.Components[i] = nil\r\n        end\r\n    end\r\n\r\n    function boxBase:Update()\r\n        if not self.PrimaryPart then\r\n            --warn(\"not supposed to print\", self.Object)\r\n            return self:Remove()\r\n        end\r\n\r\n        local color\r\n        if ESP.Highlighted == self.Object then\r\n        color = ESP.HighlightColor\r\n        else\r\n            color = self.Color or self.ColorDynamic and self:ColorDynamic() or ESP:GetColor(self.Object) or ESP.Color\r\n        end\r\n\r\n        local allow = true\r\n        if ESP.Overrides.UpdateAllow and not ESP.Overrides.UpdateAllow(self) then\r\n            allow = false\r\n        end\r\n        if self.Player and not ESP.TeamMates and ESP:IsTeamMate(self.Player) then\r\n            allow = false\r\n        end\r\n        if self.Player and not ESP.Players then\r\n            allow = false\r\n        end\r\n        if self.IsEnabled and (type(self.IsEnabled) == \"string\" and not ESP[self.IsEnabled] or type(self.IsEnabled) == \"function\" and not self:IsEnabled()) then\r\n            allow = false\r\n        end\r\n        if not workspace:IsAncestorOf(self.PrimaryPart) and not self.RenderInNil then\r\n            allow = false\r\n        end\r\n\r\n        if not allow then\r\n            for i,v in pairs(self.Components) do\r\n                v.Visible = false\r\n            end\r\n            return\r\n        end\r\n\r\n        if ESP.Highlighted == self.Object then\r\n            color = ESP.HighlightColor\r\n        end\r\n\r\n        --calculations--\r\n        local cf = self.PrimaryPart.CFrame\r\n        if ESP.FaceCamera then\r\n            cf = CFrame.new(cf.p, cam.CFrame.p)\r\n        end\r\n        local size = self.Size\r\n        local locs = {\r\n            TopLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,size.Y/2,0),\r\n            TopRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,size.Y/2,0),\r\n            BottomLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,-size.Y/2,0),\r\n            BottomRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,-size.Y/2,0),\r\n            TagPos = cf * ESP.BoxShift * CFrame.new(0,size.Y/2,0),\r\n            Torso = cf * ESP.BoxShift\r\n        }\r\n\r\n        if ESP.Boxes then\r\n            local TopLeft, Vis1 = WorldToViewportPoint(cam, locs.TopLeft.p)\r\n            local TopRight, Vis2 = WorldToViewportPoint(cam, locs.TopRight.p)\r\n            local BottomLeft, Vis3 = WorldToViewportPoint(cam, locs.BottomLeft.p)\r\n            local BottomRight, Vis4 = WorldToViewportPoint(cam, locs.BottomRight.p)\r\n\r\n            if self.Components.Quad then\r\n                if Vis1 or Vis2 or Vis3 or Vis4 then\r\n                    self.Components.Quad.Visible = true\r\n                    self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)\r\n                    self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)\r\n                    self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)\r\n                    self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)\r\n                    self.Components.Quad.Color = color\r\n                else\r\n                    self.Components.Quad.Visible = false\r\n                end\r\n            end\r\n        else\r\n            self.Components.Quad.Visible = false\r\n        end\r\n\r\n        if ESP.Names then\r\n            local TagPos, Vis5 = WorldToViewportPoint(cam, locs.TagPos.p)\r\n            \r\n            if Vis5 then\r\n                self.Components.Name.Visible = true\r\n                self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)\r\n                self.Components.Name.Text = self.Name\r\n                self.Components.Name.Color = color\r\n                \r\n                self.Components.Distance.Visible = true\r\n                self.Components.Distance.Position = Vector2.new(TagPos.X, TagPos.Y + 14)\r\n                self.Components.Distance.Text = math.floor((cam.CFrame.p - cf.p).magnitude) ..\"m away\"\r\n                self.Components.Distance.Color = color\r\n            else\r\n                self.Components.Name.Visible = false\r\n                self.Components.Distance.Visible = false\r\n            end\r\n        else\r\n            self.Components.Name.Visible = false\r\n            self.Components.Distance.Visible = false\r\n        end\r\n        \r\n        if ESP.Tracers then\r\n            local TorsoPos, Vis6 = WorldToViewportPoint(cam, locs.Torso.p)\r\n\r\n            if Vis6 then\r\n                self.Components.Tracer.Visible = true\r\n                self.Components.Tracer.From = Vector2.new(TorsoPos.X, TorsoPos.Y)\r\n                self.Components.Tracer.To = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/ESP.AttachShift)\r\n                self.Components.Tracer.Color = color\r\n            else\r\n                self.Components.Tracer.Visible = false\r\n            end\r\n        else\r\n            self.Components.Tracer.Visible = false\r\n        end\r\n    end\r\n\r\n    function ESP:Add(obj, options)\r\n        if not obj.Parent and not options.RenderInNil then\r\n            return warn(obj, \"has no parent\")\r\n        end\r\n\r\n        local box = setmetatable({\r\n            Name = options.Name or obj.Name,\r\n            Type = \"Box\",\r\n            Color = options.Color --[[or self:GetColor(obj)]],\r\n            Size = options.Size or self.BoxSize,\r\n            Object = obj,\r\n            Player = options.Player or plrs:GetPlayerFromCharacter(obj),\r\n            PrimaryPart = options.PrimaryPart or obj.ClassName == \"Model\" and (obj.PrimaryPart or obj:FindFirstChild(\"HumanoidRootPart\") or obj:FindFirstChildWhichIsA(\"BasePart\")) or obj:IsA(\"BasePart\") and obj,\r\n            Components = {},\r\n            IsEnabled = options.IsEnabled,\r\n            Temporary = options.Temporary,\r\n            ColorDynamic = options.ColorDynamic,\r\n            RenderInNil = options.RenderInNil\r\n        }, boxBase)\r\n\r\n        if self:GetBox(obj) then\r\n            self:GetBox(obj):Remove()\r\n        end\r\n\r\n        box.Components[\"Quad\"] = Draw(\"Quad\", {\r\n            Thickness = self.Thickness,\r\n            Color = color,\r\n            Transparency = 1,\r\n            Filled = false,\r\n            Visible = self.Enabled and self.Boxes\r\n        })\r\n        box.Components[\"Name\"] = Draw(\"Text\", {\r\n            Text = box.Name,\r\n            Color = box.Color,\r\n            Center = true,\r\n            Outline = true,\r\n            Size = 19,\r\n            Visible = self.Enabled and self.Names\r\n        })\r\n        box.Components[\"Distance\"] = Draw(\"Text\", {\r\n            Color = box.Color,\r\n            Center = true,\r\n            Outline = true,\r\n            Size = 19,\r\n            Visible = self.Enabled and self.Names\r\n        })\r\n        \r\n        box.Components[\"Tracer\"] = Draw(\"Line\", {\r\n            Thickness = ESP.Thickness,\r\n            Color = box.Color,\r\n            Transparency = 1,\r\n            Visible = self.Enabled and self.Tracers\r\n        })\r\n        self.Objects[obj] = box\r\n        \r\n        obj.AncestryChanged:Connect(function(_, parent)\r\n            if parent == nil and ESP.AutoRemove ~= false then\r\n                box:Remove()\r\n            end\r\n        end)\r\n        obj:GetPropertyChangedSignal(\"Parent\"):Connect(function()\r\n            if obj.Parent == nil and ESP.AutoRemove ~= false then\r\n                box:Remove()\r\n            end\r\n        end)\r\n\r\n        local hum = obj:FindFirstChildOfClass(\"Humanoid\")\r\n        if hum then\r\n            hum.Died:Connect(function()\r\n                if ESP.AutoRemove ~= false then\r\n                    box:Remove()\r\n                end\r\n            end)\r\n        end\r\n\r\n        return box\r\n    end\r\n\r\n    local function CharAdded(char)\r\n        local p = plrs:GetPlayerFromCharacter(char)\r\n        if not char:FindFirstChild(\"HumanoidRootPart\") then\r\n            local ev\r\n            ev = char.ChildAdded:Connect(function(c)\r\n                if c.Name == \"HumanoidRootPart\" then\r\n                    ev:Disconnect()\r\n                    ESP:Add(char, {\r\n                        Name = p.Name,\r\n                        Player = p,\r\n                        PrimaryPart = c\r\n                    })\r\n                end\r\n            end)\r\n        else\r\n            ESP:Add(char, {\r\n                Name = p.Name,\r\n                Player = p,\r\n                PrimaryPart = char.HumanoidRootPart\r\n            })\r\n        end\r\n    end\r\n    local function PlayerAdded(p)\r\n        p.CharacterAdded:Connect(CharAdded)\r\n        if p.Character then\r\n            coroutine.wrap(CharAdded)(p.Character)\r\n        end\r\n    end\r\n    plrs.PlayerAdded:Connect(PlayerAdded)\r\n    for i,v in pairs(plrs:GetPlayers()) do\r\n        if v ~= plr then\r\n            PlayerAdded(v)\r\n        end\r\n    end\r\n\r\n    game:GetService(\"RunService\").RenderStepped:Connect(function()\r\n        cam = workspace.CurrentCamera\r\n        for i,v in (ESP.Enabled and pairs or ipairs)(ESP.Objects) do\r\n            if v.Update then\r\n                local s,e = pcall(v.Update, v)\r\n                if not s then warn(\"[EU]\", e, v.Object:GetFullName()) end\r\n            end\r\n        end\r\n    end)\r\n\r\n    ----[[ Now Begins WRD's modification for implementation ]]----\r\n\r\n    --Sets defaults where required\r\n    if _G.WRDESPEnabled == nil then _G.WRDESPEnabled = true end\r\n    if _G.WRDESPBoxes == nil then _G.WRDESPBoxes = true end\r\n    if _G.WRDESPTeamColors == nil then _G.WRDESPTeamColors = true end\r\n    if _G.WRDESPTracers == nil then _G.WRDESPTracers = false end\r\n    if _G.WRDESPNames == nil then _G.WRDESPNames = true end\r\n\t\r\n\t--Hacky way to keep up with setting changes\r\n    while wait(.1) do\r\n        ESP:Toggle(_G.WRDESPEnabled or false)\r\n        ESP.Boxes = _G.WRDESPBoxes or false\r\n        ESP.TeamColors = _G.WRDESPTeamColors or false\r\n        ESP.Tracers = _G.WRDESPTracers or false\r\n        ESP.Names = _G.WRDESPNames or false\r\n    end\r\n\r\n    _G.WRDESPLoaded = true\r\nend");
        }

        private void button11_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("-- Script and GUI made by EXONL\r\n\r\n-- GUI SHIT\r\nlocal ScreenGui = Instance.new(\"ScreenGui\")\r\nlocal TextButton = Instance.new(\"TextButton\")\r\nlocal UICorner = Instance.new(\"UICorner\")\r\nlocal Frame = Instance.new(\"Frame\")\r\nlocal UICorner_2 = Instance.new(\"UICorner\")\r\nlocal TextLabel = Instance.new(\"TextLabel\")\r\nlocal targetUsername = Instance.new(\"TextBox\")\r\nlocal personNaked = Instance.new(\"TextButton\")\r\nlocal UICorner_3 = Instance.new(\"UICorner\")\r\nlocal yourselfNaked = Instance.new(\"TextButton\")\r\nlocal UICorner_4 = Instance.new(\"UICorner\")\r\nlocal TextLabel_2 = Instance.new(\"TextLabel\")\r\n\r\nScreenGui.Parent = game.Players.LocalPlayer:WaitForChild(\"PlayerGui\")\r\nScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling\r\n\r\nTextButton.Parent = ScreenGui\r\nTextButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)\r\nTextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)\r\nTextButton.BorderSizePixel = 0\r\nTextButton.Position = UDim2.new(0.676716924, 0, 0.122834645, 0)\r\nTextButton.Size = UDim2.new(0, 300, 0, 50)\r\nTextButton.ZIndex = 9\r\nTextButton.Font = Enum.Font.SourceSans\r\nTextButton.Text = \"Toggle NAKED-GUI\"\r\nTextButton.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nTextButton.TextSize = 14.000\r\n\r\nUICorner.Parent = TextButton\r\n\r\nFrame.Parent = TextButton\r\nFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)\r\nFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)\r\nFrame.BorderSizePixel = 0\r\nFrame.Position = UDim2.new(0, 0, 0.99685061, 0)\r\nFrame.Size = UDim2.new(0, 300, 0, 180)\r\n\r\nUICorner_2.Parent = Frame\r\n\r\nTextLabel.Parent = Frame\r\nTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)\r\nTextLabel.BackgroundTransparency = 1.000\r\nTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)\r\nTextLabel.BorderSizePixel = 0\r\nTextLabel.Position = UDim2.new(0, 0, 0.899999976, 0)\r\nTextLabel.Size = UDim2.new(0, 300, 0, 18)\r\nTextLabel.Font = Enum.Font.SourceSans\r\nTextLabel.Text = \"Made by Exonl, creator of E-Sploit\"\r\nTextLabel.TextColor3 = Color3.fromRGB(161, 161, 161)\r\nTextLabel.TextSize = 14.000\r\n\r\ntargetUsername.Name = \"targetUsername\"\r\ntargetUsername.Parent = Frame\r\ntargetUsername.BackgroundColor3 = Color3.fromRGB(79, 79, 79)\r\ntargetUsername.BorderColor3 = Color3.fromRGB(0, 0, 0)\r\ntargetUsername.BorderSizePixel = 0\r\ntargetUsername.Position = UDim2.new(0.0566666685, 0, 0.0611111112, 0)\r\ntargetUsername.Size = UDim2.new(0, 266, 0, 32)\r\ntargetUsername.Font = Enum.Font.SourceSans\r\ntargetUsername.PlaceholderText = \"Type exact username of player to undress here\"\r\ntargetUsername.Text = \"\"\r\ntargetUsername.TextColor3 = Color3.fromRGB(255, 255, 255)\r\ntargetUsername.TextSize = 14.000\r\n\r\npersonNaked.Name = \"personNaked\"\r\npersonNaked.Parent = Frame\r\npersonNaked.BackgroundColor3 = Color3.fromRGB(13, 255, 0)\r\npersonNaked.BorderColor3 = Color3.fromRGB(0, 0, 0)\r\npersonNaked.BorderSizePixel = 0\r\npersonNaked.Position = UDim2.new(0.0566666685, 0, 0.277777791, 0)\r\npersonNaked.Size = UDim2.new(0, 266, 0, 27)\r\npersonNaked.Font = Enum.Font.SourceSans\r\npersonNaked.Text = \"Make person naked\"\r\npersonNaked.TextColor3 = Color3.fromRGB(0, 0, 0)\r\npersonNaked.TextSize = 14.000\r\n\r\nUICorner_3.Parent = personNaked\r\n\r\nyourselfNaked.Name = \"yourselfNaked\"\r\nyourselfNaked.Parent = Frame\r\nyourselfNaked.BackgroundColor3 = Color3.fromRGB(13, 255, 0)\r\nyourselfNaked.BorderColor3 = Color3.fromRGB(0, 0, 0)\r\nyourselfNaked.BorderSizePixel = 0\r\nyourselfNaked.Position = UDim2.new(0.0566666685, 0, 0.533333361, 0)\r\nyourselfNaked.Size = UDim2.new(0, 266, 0, 27)\r\nyourselfNaked.Font = Enum.Font.SourceSans\r\nyourselfNaked.Text = \"Make yourself naked\"\r\nyourselfNaked.TextColor3 = Color3.fromRGB(0, 0, 0)\r\nyourselfNaked.TextSize = 14.000\r\n\r\nUICorner_4.Parent = yourselfNaked\r\n\r\nTextLabel_2.Parent = Frame\r\nTextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)\r\nTextLabel_2.BackgroundTransparency = 1.000\r\nTextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)\r\nTextLabel_2.BorderSizePixel = 0\r\nTextLabel_2.Position = UDim2.new(0.0566666685, 0, 0.727777779, 0)\r\nTextLabel_2.Size = UDim2.new(0, 266, 0, 31)\r\nTextLabel_2.Font = Enum.Font.SourceSans\r\nTextLabel_2.Text = \"NOTE! this script is client sided. Only you will be able to see it.\"\r\nTextLabel_2.TextColor3 = Color3.fromRGB(255, 0, 4)\r\nTextLabel_2.TextScaled = true\r\nTextLabel_2.TextSize = 14.000\r\nTextLabel_2.TextWrapped = true\r\n\r\n-- FUNCTIONS N SHIT\r\nyourselfNaked.MouseButton1Click:Connect(function()\r\n\tif game.Players.LocalPlayer.Character:FindFirstChild(\"Shirt\") ~= nil then\r\n\t\tgame.Players.LocalPlayer.Character:FindFirstChild(\"Shirt\"):Remove()\r\n\tend\r\n\tif game.Players.LocalPlayer.Character:FindFirstChild(\"Pants\") ~= nil then\r\n\t\tgame.Players.LocalPlayer.Character:FindFirstChild(\"Pants\"):Remove()\r\n\tend\r\n\tif game.Players.LocalPlayer.Character:FindFirstChild(\"Shirt Graphic\") ~= nil then\r\n\t\tgame.Players.LocalPlayer.Character:FindFirstChild(\"Shirt Graphic\"):Remove()\r\n\tend\r\nend)\r\n\r\npersonNaked.MouseButton1Click:Connect(function()\r\n\tif game.Players:FindFirstChild(targetUsername.Text).Character:FindFirstChild(\"Shirt\") ~= nil then\r\n\t\tgame.Players:FindFirstChild(targetUsername.Text).Character:FindFirstChild(\"Shirt\"):Remove()\r\n\tend\r\n\tif game.Players:FindFirstChild(targetUsername.Text).Character:FindFirstChild(\"Pants\") ~= nil then\r\n\t\tgame.Players:FindFirstChild(targetUsername.Text).Character:FindFirstChild(\"Pants\"):Remove()\r\n\tend\r\n\tif game.Players:FindFirstChild(targetUsername.Text).Character:FindFirstChild(\"Shirt Graphic\") ~= nil then\r\n\t\tgame.Players:FindFirstChild(targetUsername.Text).Character:FindFirstChild(\"Shirt Graphic\"):Remove()\r\n\tend\r\nend)\r\n\r\nTextButton.MouseButton1Click:Connect(function()\r\n\tif Frame.Visible == true then\r\n\t\tFrame.Visible = false\r\n\telse\r\n\t\tFrame.Visible = true\r\n\tend\r\nend)");
        }

        private void button9_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://raw.githubusercontent.com/Exunys/AirHub/main/AirHub.lua\"))()");
        }

        private void button16_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("targetUsername = " + '\"' + textBox3.Text + '\"' + "\r\nplayers = game:GetService(\"Players\")\r\ntargetPlayer = players:FindFirstChild(targetUsername)\r\nplayers.LocalPlayer.Character:MoveTo(targetPlayer.Character.HumanoidRootPart.Position)");
        }

        private void button17_Click(object sender, EventArgs e)
        {
            SaladAPI.MainFunctions.Execute("loadstring(game:HttpGet(\"https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source\"))()");
        }
    }
}
